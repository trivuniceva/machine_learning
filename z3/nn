import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import f1_score

# Učitavanje ulaznih podataka
train = pd.read_csv("est_preview.csv") # Trening skup
test = pd.read_csv("potpuni_fajl.csv") # Test skup za predikciju

# Nedostajuće vrednosti
train = train.dropna()

# Kodiranje kategoričkih atributa
label_encoder = LabelEncoder()

train['bracni_status'] = label_encoder.fit_transform(train['bracni_status'])
train['rasa'] = label_encoder.fit_transform(train['rasa'])
train['tip_posla'] = label_encoder.fit_transform(train['tip_posla'])
train['zdravstveno_osiguranje'] = label_encoder.fit_transform(train['zdravstveno_osiguranje'])

test['bracni_status'] = label_encoder.transform(test['bracni_status'])
test['rasa'] = label_encoder.transform(test['rasa'])
test['tip_posla'] = label_encoder.transform(test['tip_posla'])
test['zdravstveno_osiguranje'] = label_encoder.transform(test['zdravstveno_osiguranje'])

X_train = train.drop(['obrazovanje'], axis=1)
y_train = train['obrazovanje']

# Treniranje modela
clf = GradientBoostingClassifier(n_estimators=200, learning_rate=0.1, max_depth=3, random_state=42)
clf.fit(X_train, y_train)

# Predviđanje na test skupu
X_test = test.drop(['obrazovanje'], axis=1)
y_pred = clf.predict(X_test)

# Ispisivanje rezultata
print(y_pred)
